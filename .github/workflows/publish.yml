name: Publish Hub
on:
  workflow_dispatch:
  push:
    branches:
      - master
  schedule:
    - cron: "30 23 * * *"
concurrency:
  group: publish-master
env:
  NODE_OPTIONS: --max-old-space-size=4096
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
      - name: Install project dependencies
        run: yarn --prefer-offline
      - name: Build static site
        run: yarn build
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-2" # optional: defaults to us-east-1
          SOURCE_DIR: "dist" # optional: defaults to entire repository

  galaxy-social-assistant:
    needs: publish
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check for news/events content changes
        uses: dorny/paths-filter@v3
        id: check_changes
        with:
          list-files: json
          filters: |
            content:
              - added: 'content/news/**/index.md'
              - added: 'content/events/**/index.md'
      - name: Wait for updated feeds to be available
        if: steps.check_changes.outputs.content == 'true'
        shell: python
        run: |
          import json
          import re
          import time
          import urllib.request

          files = json.loads("${{ steps.check_changes.outputs.content_files }}")
          print(f"Checking {len(files)} new posts in feeds...")

          timeout = 3600
          start_time = time.time()
          wait_time = 10.0

          while time.time() - start_time < timeout:
              try:
                  all_found = True
                  for file in files:
                      match = re.match(r"content/(news|events)/([^/]+)/", file)
                      if not match:
                          print(f"Skipping invalid file path: {file}")
                          continue
                      feed_type, dir_name = match.groups()
                      req = urllib.request.Request(
                          f"https://galaxyproject.org/{feed_type}/feed.json"
                      )
                      with urllib.request.urlopen(req, timeout=30) as response:
                          feed = json.load(response)
                      if not any(
                          f"/{feed_type}/{dir_name}/" in item["path"] for item in feed[feed_type]
                      ):
                          print(f"Waiting for /{feed_type}/{dir_name}/")
                          all_found = False
                          break
                  if all_found:
                      print("All content found in feeds!")
                      exit(0)
              except Exception as e:
                  print(f"Error fetching feed: {e}")
              time.sleep(wait_time)
              wait_time = min(wait_time * 1.5, 300.0)
          print("Timeout waiting for feeds")
          exit(1)
      - name: Create Galaxy Social Assistant Token
        if: steps.check_changes.outputs.content == 'true'
        uses: actions/create-github-app-token@v2
        id: galaxy-social-assistant-token
        with:
          app-id: ${{ vars.GALAXY_SOCIAL_ASSISTANT_APP_ID }}
          private-key: ${{ secrets.GALAXY_SOCIAL_ASSISTANT_PRIVATE_KEY }}
          owner: "usegalaxy-eu"
          repositories: "galaxy-social-assistant"
      - name: Trigger Galaxy Social Assistant
        if: steps.check_changes.outputs.content == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: feed_bot.yml
          repo: usegalaxy-eu/galaxy-social-assistant
          token: ${{ steps.galaxy-social-assistant-token.outputs.token }}
          ref: main
